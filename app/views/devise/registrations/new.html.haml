#bg
  .container
    .col-6.mx-auto.whitesmoke-bg
      %h2.orange-text= t 'home.index.register'
      = form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|

        = f.fields_for :user_detail do |d|
          .form-group.row
            %label.col-sm-3.col-form-label.col-form-label-sm.button{"for" => "picUpload"}
              = t 'devise.registrations.edit.upload_prof_pic'
            .col-sm-9
              = d.file_field :profile_picture, as: :file, class: "form-control show-for-sr", id: "picUpload", onchange: "previewProfilePic()"
              %p.error= show_errors(@user.user_detail, :profile_picture)
              .previewProfilePic

          .form-group.row
            %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgState"}
              = t 'devise.registrations.edit.state'
            .col-sm-9
              = d.select :state, GC.states, {include_blank: true}, {class: "form-control form-control-lg state-selection", id: "lgState"}
              %p.error= show_errors(@user.user_detail, :state)

          .form-group.row
            %label.col-sm-3.col-form-label.col-form-label-lg.city-selection-label{for: "lgCity"}
              = t 'devise.registrations.edit.city'
            .col-sm-9
              = d.select :city, GC.cities('att'), {include_blank: "Πόλη"}, {class: "city-selection form-control form-control-lg", id: "lgCity"}
              %p.error= show_errors(@user.user_detail, :city)

          .form-group.row
            %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgGender"}
              = t 'devise.registrations.edit.gender'
            .col-sm-9
              = d.select :gender, [["#{t 'devise.registrations.edit.male'}", 'male'], ["#{t 'devise.registrations.edit.female'}", 'female'], ["#{t 'devise.registrations.edit.other'}", 'other']], {}, {class: "form-control form-control-lg", id: "lgGender"}
              %p.error= show_errors(@user.user_detail, :gender)

          .form-group.row
            %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgAge"}
              = t 'devise.registrations.edit.age'
            .col-sm-9
              = d.select :age, options_for_select((18..99).step(1), 30), {}, {class: "form-control form-control-lg", id: "lgAge"}
              %p.error= show_errors(@user.user_detail, :age)

        .form-group.row
          %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgUsername"}
            = t 'devise.registrations.edit.username'
          .col-sm-9
            = f.text_field :username, placeholder: "#{t 'devise.registrations.edit.only_latin'}", class: "form-control form-control-lg", id: "lgUsername"
            %p.error= show_errors(@user, :username)

        .form-group.row
          %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgEmail"}
            = t 'devise.registrations.edit.email'
          .col-sm-9
            = f.text_field :email, class: "form-control form-control-lg", id: "lgUsername"
            %p.error= show_errors(@user, :email)

        .form-group.row
          %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgPassword"}
            = t 'devise.registrations.edit.password'
          .col-sm-9
            = f.password_field :password, autocomplete: "off", class: "form-control form-control-lg", id: "lgPassword"
            %p.error= show_errors(@user, :password)
            - if @minimum_password_length
              %small.text-muted
                (#{@minimum_password_length} #{t 'devise.registrations.edit.pass_validation'})

        .form-group.row
          %label.col-sm-3.col-form-label.col-form-label-lg{for: "lgPasswordConf"}
            = t 'devise.registrations.edit.password_confirmation'
          .col-sm-9
            = f.password_field :password_confirmation, autocomplete: "off", class: "form-control form-control-lg", id: "lgUsername"
            %p.error= show_errors(@user, :password_confirmation)

        .form-group
          = f.submit "#{t 'home.index.register'}", class: "btn btn-primary btn-block"
        = link_to "#{t 'abouts.edit.back'}", :back, class: 'button primary small'
