upstream puma_<%= fetch(:nginx_config_name) %> { <%
  flags = 'fail_timeout=0'
  @backends = [fetch(:puma_bind)].flatten.map do |m|
  etype, address  = /(tcp|unix|ssl):\/{1,2}(.+)/.match(m).captures
  if etype =='unix'
    "server #{etype}:#{address} #{fetch(:nginx_socket_flags)};"
  else
    "server #{address.gsub(/0\.0\.0\.0(.+)/, "127.0.0.1\\1")} #{fetch(:nginx_http_flags)};"
  end
end
%><% @backends.each do |server|  %>
  <%= server %><% end %>
}

server {
  listen 80;
  server_name kardies.gr;
  return 301 https://kardies.gr$request_uri;
}

server {
  listen 80;
  server_name www.kardies.gr;
  return 301 https://www.kardies.gr$request_uri;
}

server {
  listen 443 ssl;
  server_name www.kardies.gr;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  return 301 https://kardies.gr$request_uri;
}

server {
  listen 80;
  listen 443 ssl;
  server_name kardies.gr;

  ssl_certificate /etc/nginx/ssl/kardies_gr/ssl-bundle.crt;
  ssl_certificate_key /etc/nginx/ssl/kardies_gr/kardies_gr.key;
  ssl on;
  ssl_prefer_server_ciphers on;

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_set_header X-Forwarded-Port 443;
  proxy_set_header Host $http_host;

  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

  client_max_body_size 4G;
  keepalive_timeout 10;

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  root <%= current_path %>/public;
  try_files $uri/index.html $uri @puma_<%= fetch(:nginx_config_name) %>;

  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/nginx/ssl/kardies_gr/ssl-bundle.crt;

  location @puma_<%= fetch(:nginx_config_name) %> {
    proxy_pass http://puma_<%= fetch(:nginx_config_name) %>;

    access_log <%= shared_path %>/log/nginx.access.log;
    error_log <%= shared_path %>/log/nginx.error.log;
  }

  location /cable {
    proxy_pass http://puma_<%= fetch(:nginx_config_name) %>/cable;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;
  }

  location = /google24de39283b44c66d.html {
    rewrite ^/(.*)  $1;
    return 200 "google-site-verification: $uri";
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ \.(php|html)$ {
    return 405;
  }
}
